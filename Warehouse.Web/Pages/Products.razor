@page "/products"
@using System.Text.Json
@using System.Text.Json.Serialization
@using Warehouse.Core.Products.Models
@inject IHttpClientFactory ClientFactory
@inject HttpClient http
@inject NavigationManager Navigation

<h3>Products</h3>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else if (!products.Any())
{
    <p>No products available.</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Available Amount</th>
            <th>Parcel Dimensions (L x W x H)</th>
            <th>Manufacturer</th>
        </tr>
        </thead>
        <tbody>
        @foreach (Product product in products)
        {
            <tr>
                <td>@product.Manufacturer.Name</td>
                <td>@product.Price</td>
                <td>@product.AvailableAmount</td>
                <td>@product.ParcelInfo.Length x @product.ParcelInfo.Width x @product.ParcelInfo.Height</td>
                <td>@product.Manufacturer.Name</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    List<Product> products = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            HttpClient httpClient = ClientFactory.CreateClient();
            httpClient.DefaultRequestHeaders.Add("Accept", "application/json");

            products = await http.GetFromJsonAsync<List<Product>>("https://localhost:7125/api/product")
                       ?? new List<Product>()
                       {
                           new()
                       };
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}